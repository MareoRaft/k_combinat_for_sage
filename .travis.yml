# For deployment to github pages, check resource https://docs.travis-ci.com/user/deployment/pages/
# In GitHub settings, go to GitHub Pages section, Source subsection, and select "gh-pages branch" from dropdown.  That option WON'T APPEAR if you don't have a branch called 'gh-pages'.
sudo: required
language: python # python will be pre-installed on server thanks to this
python:
- "2.7"
before_install:
# space separated list of optional dependencies(conda packages) to install and test
# autowrap installs libgfortran libgcc gcc cython
- TEST_OPT_DEPENDENCY="numpy scipy gmpy2 matplotlib>=2.2 theano llvmlite autowrap python-symengine=0.3.* tensorflow numexpr ipython antlr-python-runtime>=4.7,<4.8 antlr>=4.7,<4.8 sage"
- python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
- if [[ "${FASTCACHE}" != "false" ]]; then
    pip install fastcache;
  fi
- if [[ "${TEST_SPHINX}" == "true" ]]; then
    pip install "sphinx" "docutils" doctr;
  fi
- |
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -q -O miniconda.sh;
  else
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -q -O miniconda.sh;
  fi
- bash miniconda.sh -b -p $HOME/miniconda;
- export PATH="$HOME/miniconda/bin:$PATH";
- hash -r;
- conda config --set always_yes yes --set changeps1 no;
- conda update -q conda;
- conda config --prepend channels conda-forge --prepend channels symengine/label/dev;
- conda info -a;
- conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pip ${TEST_OPT_DEPENDENCY/sage};
- source activate test-environment;
- conda clean --all;
- conda install -q "sage==8.1";
- conda clean --all;
- if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
    pip install matchpy;
  fi
- which sage
- sage --version
- sudo find / -name "sage"
script:
- pwd
- cd docs
- pwd
- make html
- # move html files into place
- mv build/html/* .
- # include .nojekyll (see https://help.github.com/articles/files-that-start-with-an-underscore-are-missing/)
- touch .nojekyll
- ls -a
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_API_KEY # You need to create this key (public access token) following the steps in https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/.  Make sure the PAT has the appropriate repo or public_repo access (or both).  Then copy and paste this PAT as an environment variable "GITHUB_API_KEY" in Travis settings for the appropriate repository.
  local_dir: docs
  on:
    branch: master

